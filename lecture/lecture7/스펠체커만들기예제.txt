1. analysis-icu 추가 플러그인 설치
bin/elasticsearch-plugin install analysis-icu

2. 스펠체커 분석기를 위한 분석기 세팅
{
  "index":{
    "analysis":{
      "analyzer":{
        "nfd_analyzer": {
          "tokenizer": "standard",
          "char_filter": [
            "nfd_normalizer"
          ]
        }
      }
      "char_filter": {
        "nfd_normalizer": {
          "type": "icu_normalizer",
          "name": "nfc",
          "mode": "decompose"
        }
      }
    }
  }
}

3. 데이터 매핑
{
  "article" : {
    "properties" : {
      "title" : {
        "type" : "text",
        "fields": {
            "raw": {
            "type":  "keyword"
          },
          "spell" : {
            "type" : "text",
            "analyzer": "nfd_analyzer"
          }
        }
      }
    }
  }
}

4. 테스트 데이터 입력
{
  title : "이승철"
}
{
  title : "이승기"
}
{
  title : "이승찰"
}


5. 질의 예제

{
  "query" : {
    "match_all": {}
  },
  "suggest" : {
      "my-suggestion" : {
        "text" : "이승깅",
        "term" : {
        "field" : "title.spell",
        "string_distance" : "jarowinkler"
      }
    }
  }
}


6. 자바에서의 사용


String result = Normalizer.normalize(temp,Normalizer.Form.NFC); //재결합후 사용한다.
SearchResponseresponse=client.prepareSearch("foodblog","foodblog")
    .setTypes("post","post")
    .setSearchType(SearchType.DFS_QUERY_THEN_FETCH)
    .setQuery(QueryBuilders.matchAllQuery())
    .highlighter(highlightBuilder)
    .suggest(new SuggestBuilder().addSuggestion("my-suggestion",SuggestBuilders.termSuggestion("spell").text(queryParam.getQ()).size(5)))

​
List<String>spellList= new ArrayList<String>();
Suggestsuggest=searchResponse.getSuggest();
if(suggest!= null) {
    List<? extendsSuggest.Suggestion.Entry<? extendsSuggest.Suggestion.Entry.Option>>entries=suggest.getSuggestion("my-suggestion").getEntries();
    for(inti=0; i<entries.size(); i++){
        String temp=entries.get(i).getOptions().get(0).getText().toString();
        spellList.add(Normalizer.normalize(temp,Normalizer.Form.NFC));
    }
}

